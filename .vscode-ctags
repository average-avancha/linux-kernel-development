!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/neo/cs423/linux-kernel-development_new/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(LOGFILE)	page-fault-profiler/Makefile	/^$(LOGFILE):$/;"	t
$(LOGFILE)	rate-monotonic-scheduler/Makefile	/^$(LOGFILE):$/;"	t
APP_CFLAGS	page-fault-profiler/Makefile	/^APP_CFLAGS = -std=c11 -pipe -O2 -Werror$/;"	m
BUFD_MAX	page-fault-profiler/monitor.c	/^#define BUFD_MAX /;"	d	file:
CC	page-fault-profiler/Makefile	/^CC ?= gcc$/;"	m
DEBUG	page-fault-profiler/mp3.c	/^#define DEBUG /;"	d	file:
DEBUG	rate-monotonic-scheduler/mp2.c	/^#define DEBUG /;"	d	file:
DEV_MAJOR_NUM	page-fault-profiler/mp3.c	/^#define DEV_MAJOR_NUM /;"	d	file:
DEV_MINOR_NUM	page-fault-profiler/mp3.c	/^#define DEV_MINOR_NUM /;"	d	file:
DEV_NAME	page-fault-profiler/mp3.c	/^#define DEV_NAME /;"	d	file:
DIRNAME	page-fault-profiler/mp3.c	/^#define DIRNAME /;"	d	file:
DIRNAME	rate-monotonic-scheduler/mp2.c	/^#define DIRNAME /;"	d	file:
FACTORIAL_COUNT	rate-monotonic-scheduler/userapp.h	/^#define FACTORIAL_COUNT /;"	d
FILEMODE	page-fault-profiler/mp3.c	/^#define FILEMODE /;"	d	file:
FILEMODE	rate-monotonic-scheduler/mp2.c	/^#define FILEMODE /;"	d	file:
FILENAME	page-fault-profiler/mp3.c	/^#define FILENAME /;"	d	file:
FILENAME	rate-monotonic-scheduler/mp2.c	/^#define FILENAME /;"	d	file:
GCC	rate-monotonic-scheduler/Makefile	/^GCC:=gcc$/;"	m
INCLUDE_VERMAGIC	page-fault-profiler/mp3.mod.c	/^#define INCLUDE_VERMAGIC$/;"	d	file:
KERNEL_SRC	page-fault-profiler/Makefile	/^KERNEL_SRC := \/home\/neo\/cs423\/mp0\/linux-5.15.127$/;"	m
KERNEL_SRC	rate-monotonic-scheduler/Makefile	/^KERNEL_SRC:= \/home\/neo\/cs423\/mp0\/linux-5.15.127$/;"	m
LINUX	page-fault-profiler/mp3.c	/^#define LINUX$/;"	d	file:
LINUX	rate-monotonic-scheduler/mp2.c	/^#define LINUX$/;"	d	file:
LOGFILE	page-fault-profiler/Makefile	/^LOGFILE := $(shell date +"%Y-%m-%-d-%H-%M-%S").log$/;"	m
LOGFILE	rate-monotonic-scheduler/Makefile	/^LOGFILE= $(LOGPATH)\/mp2.log$/;"	m
LOGPATH	rate-monotonic-scheduler/Makefile	/^LOGPATH:= $(KERNEL_SRC)\/mp2_testing$/;"	m
MEM_BUF_SIZE	page-fault-profiler/mp3.c	/^#define MEM_BUF_SIZE /;"	d	file:
NPAGES	page-fault-profiler/monitor.c	/^#define NPAGES /;"	d	file:
N_ITERATION	page-fault-profiler/work.c	/^#define N_ITERATION /;"	d	file:
PAGE_COUNT	page-fault-profiler/mp3.c	/^#define PAGE_COUNT /;"	d	file:
PID	page-fault-profiler/Makefile	/^PID := $(shell echo $$PPID)$/;"	m
PID	rate-monotonic-scheduler/Makefile	/^PID:= $\$$/;"	m
READY	rate-monotonic-scheduler/mp2.c	/^        READY,$/;"	e	enum:task_state	file:
READ_SIZE	rate-monotonic-scheduler/userapp.h	/^#define READ_SIZE /;"	d
RM	rate-monotonic-scheduler/Makefile	/^RM:=rm$/;"	m
RUNNING	rate-monotonic-scheduler/mp2.c	/^        RUNNING,$/;"	e	enum:task_state	file:
SAMPLING_PERIOD_ms	page-fault-profiler/mp3.c	/^#define SAMPLING_PERIOD_ms /;"	d	file:
SLEEPING	rate-monotonic-scheduler/mp2.c	/^        SLEEPING,$/;"	e	enum:task_state	file:
STATUS_FILEPATH	rate-monotonic-scheduler/userapp.h	/^#define STATUS_FILEPATH /;"	d
SUBDIR	page-fault-profiler/Makefile	/^SUBDIR := $(PWD)$/;"	m
SUBDIR	rate-monotonic-scheduler/Makefile	/^SUBDIR= $(PWD)$/;"	m
THRESH_SAMPLING_PERIOD_ms	page-fault-profiler/mp3.c	/^#define THRESH_SAMPLING_PERIOD_ms /;"	d	file:
_DEFAULT_SOURCE	page-fault-profiler/monitor.c	/^#define _DEFAULT_SOURCE$/;"	d	file:
_DEFAULT_SOURCE	page-fault-profiler/work.c	/^#define _DEFAULT_SOURCE$/;"	d	file:
__MP2_GIVEN_INCLUDE__	rate-monotonic-scheduler/mp2_given.h	/^#define __MP2_GIVEN_INCLUDE__$/;"	d
__MP3_GIVEN_INCLUDE__	page-fault-profiler/mp3_given.h	/^#define __MP3_GIVEN_INCLUDE__$/;"	d
____versions	page-fault-profiler/mp3.mod.c	/^static const struct modversion_info ____versions[]$/;"	v	typeref:typename:const struct modversion_info[]__used __section ("__versions")	file:
all	page-fault-profiler/Makefile	/^all: clean modules monitor work$/;"	t
all	rate-monotonic-scheduler/Makefile	/^all: clean modules app$/;"	t
app	rate-monotonic-scheduler/Makefile	/^app: userapp.c userapp.h$/;"	t
buf_exit	page-fault-profiler/monitor.c	/^static void buf_exit()$/;"	f	typeref:typename:void	file:
buf_fd	page-fault-profiler/monitor.c	/^static int buf_fd = -1;$/;"	v	typeref:typename:int	file:
buf_init	page-fault-profiler/monitor.c	/^static void *buf_init(char *fname)$/;"	f	typeref:typename:void *	file:
buf_len	page-fault-profiler/monitor.c	/^static int buf_len;$/;"	v	typeref:typename:int	file:
buffer	page-fault-profiler/work.c	/^char *buffer[1024];$/;"	v	typeref:typename:char * [1024]
calc_job_time	rate-monotonic-scheduler/userapp.c	/^int calc_job_time(int n){$/;"	f	typeref:typename:int
char_fops	page-fault-profiler/mp3.c	/^static struct file_operations char_fops = {$/;"	v	typeref:struct:file_operations	file:
clean	page-fault-profiler/Makefile	/^clean:$/;"	t
clean	rate-monotonic-scheduler/Makefile	/^clean:$/;"	t
deadline_jiff	rate-monotonic-scheduler/mp2.c	/^        unsigned long deadline_jiff;$/;"	m	struct:mp2_task_struct	typeref:typename:unsigned long	file:
deregister_process	rate-monotonic-scheduler/userapp.c	/^int deregister_process(int pid){$/;"	f	typeref:typename:int
dev	page-fault-profiler/mp3.c	/^static struct cdev dev;$/;"	v	typeref:struct:cdev	file:
dispatch_thread	rate-monotonic-scheduler/mp2.c	/^struct task_struct *dispatch_thread = NULL;$/;"	v	typeref:struct:task_struct *
factorial	rate-monotonic-scheduler/userapp.c	/^int factorial(int n){$/;"	f	typeref:typename:int
find_task_by_pid	page-fault-profiler/mp3_given.h	/^struct task_struct* find_task_by_pid(unsigned int nr)$/;"	f	typeref:struct:task_struct *
find_task_by_pid	rate-monotonic-scheduler/mp2_given.h	/^struct task_struct* find_task_by_pid(unsigned int nr)$/;"	f	typeref:struct:task_struct *
get_cpu_use	page-fault-profiler/mp3_given.h	/^int get_cpu_use(int pid, unsigned long *min_flt, unsigned long *maj_flt,$/;"	f	typeref:typename:int
list	page-fault-profiler/mp3.c	/^	struct list_head list;$/;"	m	struct:mp3_task_struct	typeref:struct:list_head	file:
list	rate-monotonic-scheduler/mp2.c	/^        struct list_head list;$/;"	m	struct:mp2_task_struct	typeref:struct:list_head	file:
local_access	page-fault-profiler/work.c	/^static int local_access(int addr)$/;"	f	typeref:typename:int	file:
main	page-fault-profiler/monitor.c	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	page-fault-profiler/work.c	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	rate-monotonic-scheduler/userapp.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
maj_flt	page-fault-profiler/mp3.c	/^	unsigned long maj_flt;$/;"	m	struct:mp3_task_struct	typeref:typename:unsigned long	file:
mem_buffer	page-fault-profiler/mp3.c	/^static char * mem_buffer = NULL;$/;"	v	typeref:typename:char *	file:
min_flt	page-fault-profiler/mp3.c	/^	unsigned long min_flt; $/;"	m	struct:mp3_task_struct	typeref:typename:unsigned long	file:
mmap_callback	page-fault-profiler/mp3.c	/^static int mmap_callback(struct file * filp, struct vm_area_struct * vma){$/;"	f	typeref:typename:int	file:
modules	page-fault-profiler/Makefile	/^modules:$/;"	t
modules	rate-monotonic-scheduler/Makefile	/^modules:$/;"	t
monitor	page-fault-profiler/Makefile	/^monitor: monitor.c$/;"	t
mp2.ko	rate-monotonic-scheduler/Makefile	/^mp2.ko:$/;"	t
mp2_admission_control	rate-monotonic-scheduler/mp2.c	/^static int mp2_admission_control(unsigned long period, unsigned long processing_time)$/;"	f	typeref:typename:int	file:
mp2_curr_task	rate-monotonic-scheduler/mp2.c	/^static struct mp2_task_struct * mp2_curr_task = NULL;$/;"	v	typeref:struct:mp2_task_struct *	file:
mp2_deregistration	rate-monotonic-scheduler/mp2.c	/^static int mp2_deregistration(unsigned int pid)$/;"	f	typeref:typename:int	file:
mp2_dispatcher	rate-monotonic-scheduler/mp2.c	/^static int mp2_dispatcher(void * data)$/;"	f	typeref:typename:int	file:
mp2_exit	rate-monotonic-scheduler/mp2.c	/^void __exit mp2_exit(void)$/;"	f	typeref:typename:void __exit
mp2_init	rate-monotonic-scheduler/mp2.c	/^int __init mp2_init(void)$/;"	f	typeref:typename:int __init
mp2_proc_list_lock	rate-monotonic-scheduler/mp2.c	/^static spinlock_t mp2_proc_list_lock;$/;"	v	typeref:typename:spinlock_t	file:
mp2_read	rate-monotonic-scheduler/mp2.c	/^static ssize_t mp2_read(struct file * filp, char __user * usr_buf, size_t count, loff_t * offp)$/;"	f	typeref:typename:ssize_t	file:
mp2_registration	rate-monotonic-scheduler/mp2.c	/^static int mp2_registration(unsigned int pid, unsigned long period, unsigned long processing_tim/;"	f	typeref:typename:int	file:
mp2_task_struct	rate-monotonic-scheduler/mp2.c	/^struct mp2_task_struct {$/;"	s	file:
mp2_task_struct_cachep	rate-monotonic-scheduler/mp2.c	/^static struct kmem_cache * mp2_task_struct_cachep;$/;"	v	typeref:struct:kmem_cache *	file:
mp2_timer_callback	rate-monotonic-scheduler/mp2.c	/^static void mp2_timer_callback(struct timer_list * timer)$/;"	f	typeref:typename:void	file:
mp2_timer_work_handler	rate-monotonic-scheduler/mp2.c	/^static void mp2_timer_work_handler(struct work_struct *work)$/;"	f	typeref:typename:void	file:
mp2_write	rate-monotonic-scheduler/mp2.c	/^static ssize_t mp2_write(struct file * filp, const char __user * usr_buf, size_t count, loff_t */;"	f	typeref:typename:ssize_t	file:
mp2_yield	rate-monotonic-scheduler/mp2.c	/^static int mp2_yield(unsigned int pid)$/;"	f	typeref:typename:int	file:
mp3.ko	page-fault-profiler/Makefile	/^mp3.ko:$/;"	t
mp3_exit	page-fault-profiler/mp3.c	/^void __exit mp3_exit(void)$/;"	f	typeref:typename:void __exit
mp3_init	page-fault-profiler/mp3.c	/^int __init mp3_init(void)$/;"	f	typeref:typename:int __init
mp3_proc_list_lock	page-fault-profiler/mp3.c	/^static spinlock_t mp3_proc_list_lock;$/;"	v	typeref:typename:spinlock_t	file:
mp3_read	page-fault-profiler/mp3.c	/^static ssize_t mp3_read(struct file * filp, char __user * usr_buf, size_t count, loff_t * offp)$/;"	f	typeref:typename:ssize_t	file:
mp3_registration	page-fault-profiler/mp3.c	/^static int mp3_registration(unsigned int pid)$/;"	f	typeref:typename:int	file:
mp3_task_struct	page-fault-profiler/mp3.c	/^struct mp3_task_struct {$/;"	s	file:
mp3_task_struct_cachep	page-fault-profiler/mp3.c	/^static struct kmem_cache * mp3_task_struct_cachep = NULL;$/;"	v	typeref:struct:kmem_cache *	file:
mp3_unregistration	page-fault-profiler/mp3.c	/^static int mp3_unregistration(unsigned int pid)$/;"	f	typeref:typename:int	file:
mp3_work_function	page-fault-profiler/mp3.c	/^static void mp3_work_function(struct work_struct * work){$/;"	f	typeref:typename:void	file:
mp3_workqueue	page-fault-profiler/mp3.c	/^static struct workqueue_struct * mp3_workqueue = NULL;$/;"	v	typeref:struct:workqueue_struct *	file:
mp3_write	page-fault-profiler/mp3.c	/^static ssize_t mp3_write(struct file * filp, const char __user * usr_buf, size_t count, loff_t */;"	f	typeref:typename:ssize_t	file:
msize	page-fault-profiler/work.c	/^int msize;$/;"	v	typeref:typename:int
obj-m	page-fault-profiler/Makefile	/^obj-m:= mp3.o$/;"	m
obj-m	rate-monotonic-scheduler/Makefile	/^obj-m:= mp2.o$/;"	m
old_jiffies	page-fault-profiler/mp3.c	/^static unsigned long old_jiffies = 0;$/;"	v	typeref:typename:unsigned long	file:
open_callback	page-fault-profiler/mp3.c	/^static int open_callback(struct inode * inode, struct file * filp){$/;"	f	typeref:typename:int	file:
period	rate-monotonic-scheduler/mp2.c	/^	unsigned long period;$/;"	m	struct:mp2_task_struct	typeref:typename:unsigned long	file:
pid	page-fault-profiler/mp3.c	/^	unsigned int pid;$/;"	m	struct:mp3_task_struct	typeref:typename:unsigned int	file:
pid	rate-monotonic-scheduler/mp2.c	/^        unsigned int pid;$/;"	m	struct:mp2_task_struct	typeref:typename:unsigned int	file:
proc_fops	page-fault-profiler/mp3.c	/^static struct proc_ops proc_fops = {$/;"	v	typeref:struct:proc_ops	file:
proc_fops	rate-monotonic-scheduler/mp2.c	/^static struct proc_ops proc_fops = {$/;"	v	typeref:struct:proc_ops	file:
processing_time	rate-monotonic-scheduler/mp2.c	/^	unsigned long processing_time;$/;"	m	struct:mp2_task_struct	typeref:typename:unsigned long	file:
rand_access	page-fault-profiler/work.c	/^static void rand_access()$/;"	f	typeref:typename:void	file:
read_proc_fs	rate-monotonic-scheduler/userapp.c	/^int read_proc_fs(const char * filepath){$/;"	f	typeref:typename:int
register_process	rate-monotonic-scheduler/userapp.c	/^int register_process(int pid, unsigned long period, unsigned long processing_time){$/;"	f	typeref:typename:int
release_callback	page-fault-profiler/mp3.c	/^static int release_callback(struct inode * inode, struct file * filp){$/;"	f	typeref:typename:int	file:
sampling_idx	page-fault-profiler/mp3.c	/^static char * sampling_idx = NULL;$/;"	v	typeref:typename:char *	file:
state	rate-monotonic-scheduler/mp2.c	/^        enum task_state state;$/;"	m	struct:mp2_task_struct	typeref:enum:task_state	file:
stime	page-fault-profiler/mp3.c	/^	unsigned long stime;$/;"	m	struct:mp3_task_struct	typeref:typename:unsigned long	file:
task	page-fault-profiler/mp3.c	/^	struct task_struct * task;$/;"	m	struct:mp3_task_struct	typeref:struct:task_struct *	file:
task	rate-monotonic-scheduler/mp2.c	/^        struct task_struct * task;$/;"	m	struct:mp2_task_struct	typeref:struct:task_struct *	file:
task_state	rate-monotonic-scheduler/mp2.c	/^enum task_state {$/;"	g	file:
test	rate-monotonic-scheduler/Makefile	/^test: mp2.ko userapp $(LOGFILE)$/;"	t
test0	rate-monotonic-scheduler/Makefile	/^test0: mp2.ko userapp $(LOGFILE)$/;"	t
test1	rate-monotonic-scheduler/Makefile	/^test1: mp2.ko userapp $(LOGFILE)$/;"	t
test2	rate-monotonic-scheduler/Makefile	/^test2: mp2.ko userapp $(LOGFILE)$/;"	t
test3	rate-monotonic-scheduler/Makefile	/^test3: mp2.ko userapp $(LOGFILE)$/;"	t
test_char	page-fault-profiler/Makefile	/^test_char: mp3.ko work monitor$/;"	t
test_proc	page-fault-profiler/Makefile	/^test_proc: mp3.ko$/;"	t
test_read	rate-monotonic-scheduler/Makefile	/^test_read: mp2.ko userapp $(LOGFILE)$/;"	t
utime	page-fault-profiler/mp3.c	/^	unsigned long utime; $/;"	m	struct:mp3_task_struct	typeref:typename:unsigned long	file:
vfree_mem_buffer	page-fault-profiler/mp3.c	/^static void vfree_mem_buffer(void){$/;"	f	typeref:typename:void	file:
vmalloc_index	page-fault-profiler/mp3.c	/^static unsigned long vmalloc_index(unsigned long vm_start, unsigned long i){$/;"	f	typeref:typename:unsigned long	file:
vmalloc_mem_buffer	page-fault-profiler/mp3.c	/^static void vmalloc_mem_buffer(void){$/;"	f	typeref:typename:void	file:
wakeup_timer	rate-monotonic-scheduler/mp2.c	/^        struct timer_list wakeup_timer;$/;"	m	struct:mp2_task_struct	typeref:struct:timer_list	file:
work	page-fault-profiler/Makefile	/^work: work.c$/;"	t
yield_process	rate-monotonic-scheduler/userapp.c	/^int yield_process(int pid){$/;"	f	typeref:typename:int
